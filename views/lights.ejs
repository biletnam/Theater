<html>
<script src="/javascripts/reconnectingWebsocket.js"> </script>

<head>


</head>
<body onload="load()">
<canvas id="house" width="100%" height="225"></canvas>
<input type=button onClick="switchFloor(0)" value='Basement'>
<input type=button onClick="switchFloor(1)" value='Main'>
<input type=button onClick="switchFloor(2)" value='Outside'>
</body>

</html>
<script>

    function load() {
        scale = [];
        scale[0] = 1;
        scale[1] = 1;
        scale[2] = 1;
        floor = 1;
        switchFloor(1);



        things=<%-JSON.stringify(global.settings.things)%>
       // var wsUri = "ws://<%=externalIpAddress%>:8080";
        wsUri = "ws://" + window.location.hostname + ":8080";
        ws = new ReconnectingWebSocket(wsUri);
        //ws = new WebSocket(wsUri);
        ws.onopen = function(evt){
            console.log("websocket connected")
        };
        ws.onmessage = function(evt) {

            var x = JSON.parse(evt.data);
            if (x.object == "settings.things"){
                things = x.data;
                draw(floor);
            }
        };


        draw(floor);

        var house = document.getElementById("house");
        house.addEventListener("mousedown", houseClick, false);
    }

    function switchFloor(infloor){
        floor = infloor;
        houseImage = new Image();
        switch(floor){
            case 0:
                houseImage.src = "images/housebasement.png";
                break;
            case 1:
                houseImage.src = "images/housebig.png";
                break;
            case 2:
                houseImage.src = "images/houseoutside.png";
                break;


        }
        houseImage.onload = function(){
            var ctx = document.getElementById("house").getContext("2d");
            ctx.canvas.width  = window.innerWidth-50;
            ctx.canvas.height = window.innerHeight-100;
            var scalex = ctx.canvas.width/houseImage.width;
            var scaley = ctx.canvas.height/houseImage.height;
            if (scalex > scaley){
                scale[floor] = scaley;
            }else{
                scale[floor] = scalex;
            }
            draw();
        };

    }
    function draw() {

        var canvas = document.getElementById("house")
        var ctx = canvas.getContext("2d");
        ctx.globalAlpha=1;
        ctx.clearRect ( 0 , 0 , canvas.width, canvas.height );
        ctx.drawImage(houseImage,0,0,houseImage.width*scale[floor],houseImage.height*scale[floor]);
       // ctx.globalAlpha=0.5;
        ctx.fillStyle="#FFFF00";
            for (var i = 0; i<things.length;++i) {
                if (things[i]) {
                    if (things[i].controlling == "light") {

                        if ( things[i].currentstate > 0 && things[i].floor == floor) {
                            ctx.globalAlpha=things[i].currentstate/150;
                            ctx.fillRect(things[i].coord[0] * scale[floor], things[i].coord[1] * scale[floor], (things[i].coord[2] - things[i].coord[0]) * scale[floor], (things[i].coord[3] - things[i].coord[1]) * scale[floor]);
                        }
                    }
                    }

            }

    }
    function houseClick(evt){

        var x = evt.x - house.offsetLeft;
        var y = evt.y - house.offsetTop;
        console.log(Math.round(x/scale[floor]),Math.round(y/scale[floor]));
        for (var i = 0; i<things.length;++i) {
         if (things[i] && things[i].coord){
            if (x >= things[i].coord[0] * scale[floor] && x <= things[i].coord[2] * scale[floor] && y >= things[i].coord[1] * scale[floor] && y <= things[i].coord[3] * scale[floor] && things[i].floor == floor) {
                console.log(things[i].name);

                if (things[i].currentstate > 0) {
                    var level = '0';
                } else {
                    var level = '100';

                }
           //     websocketsend("vanagtelowlevelserialcommand", "VLC 1 " + lights[i].id.slice(0, 2) + " " + lights[i].id.slice(2, 3) + "  " + level + "\r");
                websocketsend("executecommand",{command:things[i].commands[0].name,object:things[i],value:level});

               /***********************************/
                var canvas = document.getElementById("house")
                var ctx = canvas.getContext("2d");
                //ctx.globalAlpha=1;
                //ctx.clearRect ( 0 , 0 , canvas.width, canvas.height );
                //ctx.drawImage(houseImage,0,0,houseImage.width*scale[floor],houseImage.height*scale[floor]);
                ctx.globalAlpha=0.5;
                ctx.fillStyle="#552544";


                ctx.fillRect(things[i].coord[0] * scale[floor], things[i].coord[1] * scale[floor], (things[i].coord[2] - things[i].coord[0]) * scale[floor], (things[i].coord[3] - things[i].coord[1]) * scale[floor]);





                /***********************************/
                break;

            }


        }

        }
    }
    function websocketsend(type,data){

        var sendobj = {};
        sendobj.type = type;
        sendobj.data = data;
        ws.send(JSON.stringify(sendobj));

    }

</script>